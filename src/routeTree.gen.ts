/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './pages/__root'
import { Route as IndexRouteImport } from './pages/index'

const AboutmeIndexLazyRouteImport = createFileRoute('/aboutme/')()
const MyProjectsIndexLazyRouteImport = createFileRoute('/MyProjects/')()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutmeIndexLazyRoute = AboutmeIndexLazyRouteImport.update({
  id: '/aboutme/',
  path: '/aboutme/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./pages/aboutme/index.lazy').then((d) => d.Route))
const MyProjectsIndexLazyRoute = MyProjectsIndexLazyRouteImport.update({
  id: '/MyProjects/',
  path: '/MyProjects/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./pages/MyProjects/index.lazy').then((d) => d.Route),
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/MyProjects': typeof MyProjectsIndexLazyRoute
  '/aboutme': typeof AboutmeIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/MyProjects': typeof MyProjectsIndexLazyRoute
  '/aboutme': typeof AboutmeIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/MyProjects/': typeof MyProjectsIndexLazyRoute
  '/aboutme/': typeof AboutmeIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/MyProjects' | '/aboutme'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/MyProjects' | '/aboutme'
  id: '__root__' | '/' | '/MyProjects/' | '/aboutme/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MyProjectsIndexLazyRoute: typeof MyProjectsIndexLazyRoute
  AboutmeIndexLazyRoute: typeof AboutmeIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aboutme/': {
      id: '/aboutme/'
      path: '/aboutme'
      fullPath: '/aboutme'
      preLoaderRoute: typeof AboutmeIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/MyProjects/': {
      id: '/MyProjects/'
      path: '/MyProjects'
      fullPath: '/MyProjects'
      preLoaderRoute: typeof MyProjectsIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MyProjectsIndexLazyRoute: MyProjectsIndexLazyRoute,
  AboutmeIndexLazyRoute: AboutmeIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
